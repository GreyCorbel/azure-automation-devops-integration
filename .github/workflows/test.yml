# This is a basic workflow to help you get started with Actions

name: TEST

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Download Tasks SDK
        shell: pwsh
        run: |
          $sdkFolder = [System.IO.Path]::Combine($env:GITHUB_WORKSPACE,'taskSdk')
          
          $packageInfo = Save-Package -Name VstsTaskSdk -Path $sdkFolder -Force
          $sdk = [System.IO.Path]::Combine($sdkFolder,$packageInfo.Name)
          Move-Item -Path [System.IO.Path]::Combine($sdk,$packageInfo.Version,'*') -Destination $sdk
          Remove-Item [System.IO.Path]::Combine($sdk,$packageInfo.Version) -Force -Recurse
          Write-Host "Downloaded SDK $($packageInfo.Name) version $($packageInfo.Version) to $sdkFolder"
          "taskSdk=$sdk" >> "$GITHUB_ENV"
      # Runs a set of commands using the runners shell
      - name: Echo SDK folder
        shell: pwsh
        run: |
          $sdk = $env:taskSdk
          "SDK folder is: $sdk"
