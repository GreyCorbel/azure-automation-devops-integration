{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "2.0.0.0",
  "parameters": {
    "datastorageAccountName": {
      "type": "string",
      "maxLength": 24,
      "metadata": {
        "description": "Required. Name of the Storage Account."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location of the Storage Account."
      }
    },
    "datastorageAccountKind": {
      "type": "string",
      "defaultValue": "StorageV2",
      "allowedValues": [
        "StorageV2",
        "FileStorage",
        "BlockBlobStorage"
      ],
      "metadata": {
        "description": "Optional. Type of Storage Account to create."
      }
    },
    "datastorageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "metadata": {
        "description": "Optional. Storage Account Sku Name."
      }
    },
    "datastorageAccountAccessTier": {
      "type": "string",
      "defaultValue": "Cool",
      "allowedValues": [
        "Hot",
        "Cool"
      ],
      "metadata": {
        "description": "Optional. Storage Account Access Tier."
      }
    },
    "datalockForDeletion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Switch to lock storage from deletion."
      }
    },
    "datavNetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Virtual Network Identifier used to create a service endpoint."
      }
    },
    "datanetworkAcls": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Networks ACLs, this value contains IPs to whitelist and/or Subnet information."
      }
    },
    "utcYear": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy')]",
      "metadata": {
        "description": "Optional. Year data used to generate a SAS token. Default is the current year."
      }
    },
    "datablobContainers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Blob containers to create."
      }
    },
    "supportsHttpsTrafficOnly": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional, set up https traffic only."
      }
    },
    "minimumTlsVersion": {
      "type": "string",
      "defaultValue": "TLS1_2",
      "allowedValues": [
        "TLS1_1",
        "TLS1_2"
      ],
      "metadata": {
        "description": "Optional, set up minimal TLS version."
      }
    },
    "allowBlobPublicAccess": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional, set up to allow anonymous access to blob storage."
      }
    }
  },
  "variables": {
    "cleanStorageAccountName": "[replace(tolower(parameters('datastorageAccountName')), '-', '')]",
    "accountSasProperties": {
      "signedServices": "bt",
      "signedPermission": "racuw",
      "signedExpiry": "[concat(string(add(int(parameters('utcYear')), 100)), '-12-31T23:59:59Z')]",
      "signedResourceTypes": "co",
      "signedProtocol": "https"
    },
    "virtualNetworkRules": {
      "copy": [
        {
          "name": "virtualNetworkRules",
          "count": "[if(empty(parameters('datanetworkAcls')), 0, length(parameters('datanetworkAcls').virtualNetworkRules))]",
          "input": {
            "id": "[concat(parameters('datavNetId'), '/subnets/', parameters('datanetworkAcls').virtualNetworkRules[copyIndex('virtualNetworkRules')].subnet)]"
          }
        }
      ]
    },
    "networkAcls": {
      "bypass": "[if(empty(parameters('datanetworkAcls')), json('null'), parameters('datanetworkAcls').bypass)]",
      "defaultAction": "[if(empty(parameters('datanetworkAcls')), json('null'), parameters('datanetworkAcls').defaultAction)]",
      "virtualNetworkRules": "[if(empty(parameters('datanetworkAcls')), json('null'), variables('virtualNetworkRules').virtualNetworkRules)]",
      "ipRules": "[if(empty(parameters('datanetworkAcls')), json('null'), if(equals(length(parameters('datanetworkAcls').ipRules), 0), json('null'), parameters('datanetworkAcls').ipRules))]"
    }
  },
  
  "resources": [
    {
      "comments": "----DATA STORAGE ACCOUNT-----",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('cleanStorageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "[parameters('datastorageAccountKind')]",
      "sku": {
        "name": "[parameters('datastorageAccountSku')]"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": "[if(or(equals(parameters('datastorageAccountKind'), 'BlockBlobStorage'), equals(parameters('datastorageAccountKind'), 'BlobStorage'), equals(parameters('datastorageAccountKind'), 'StorageV2'), equals(parameters('datastorageAccountKind'), 'Storage')), json('{\"enabled\": true}'), json('null'))]",
            "file": "[if(or(equals(parameters('datastorageAccountKind'), 'FileStorage'), equals(parameters('datastorageAccountKind'), 'StorageV2'), equals(parameters('datastorageAccountKind'), 'Storage')), json('{\"enabled\": true}'), json('null'))]"
          }
        },
        "accessTier": "[parameters('datastorageAccountAccessTier')]",
        "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]",
        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
        "networkAcls": "[if(empty(parameters('datanetworkAcls')), json('null'), variables('networkAcls'))]"
      },
      "resources": [
        {
          "type": "providers/locks",
          "apiVersion": "2016-09-01",
          "condition": "[parameters('datalockForDeletion')]",
          "name": "Microsoft.Authorization/storageDoNotDelete",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/', variables('cleanStorageAccountName'))]"
          ],
          "comments": "Resource lock on diagnostic storage account",
          "properties": {
            "level": "CannotDelete"
          }
        }
      ]
    },
    {
      "name": "[if(empty(parameters('datablobContainers')), concat(variables('cleanStorageAccountName'), '/', 'default/dummy'), concat(variables('cleanStorageAccountName'), '/default/', parameters('datablobContainers')[copyIndex('blobContainersLoop')].name))]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "condition": "[not(empty(parameters('datablobContainers')))]",
      "copy": {
        "name": "blobContainersLoop",
        "count": "[if(empty(parameters('datablobContainers')) , 1, length(parameters('datablobContainers')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('cleanStorageAccountName'))]"
      ]
    }
  ],
    
  "outputs": {
    "datastorageAccountResourceId": {
      "type": "string",
        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('cleanStorageAccountName'))]",
          "metadata": {
            "description": "The Resource Id of the Storage Account."
          }
    },
    "datastorageAccountRegion": {
      "type": "string",
      "value": "[resourceGroup().location]",
      "metadata": {
        "description": "The Region of the Storage Account."
      }
    },
    "datastorageAccountName": {
      "type": "string",
      "value": "[variables('cleanStorageAccountName')]",
      "metadata": {
        "description": "The Name of the Storage Account."
      }
    },
    "datastorageAccountResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group the Storage Account was created in."
      }
    },
    "datastorageAccountSasToken": {
      "type": "string",
      "value": "[listAccountSas(variables('cleanStorageAccountName'), '2018-07-01', variables('accountSasProperties')).accountSasToken]",
      "metadata": {
        "description": "The SAS Token for the Storage Account."
      }
    },
    "datastorageAccountAccessKey": {
      "type": "string",
      "value": "[listKeys(variables('cleanStorageAccountName'), '2016-12-01').keys[0].value]",
      "metadata": {
        "description": "The Access Key for the Storage Account."
      }
    },
    "datastorageAccountPrimaryBlobEndpoint": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('cleanStorageAccountName')), '2019-04-01').primaryEndpoints.blob]"
    }
  }
}